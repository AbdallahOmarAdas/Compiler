//#include "scanner.h"
//const char* word[62] = {
//"IDENTIFIER", "INTEGER", "STRING", "FLOAT",
//"PROGRAM",
//"VAR", "CONSTANT", "INTEGER", "BOOLEAN", "STRING", "FLOAT", "CHAR", "DOUBLE",
//"TRUE", "FALSE", "IF", "FI", "THEN", "ELSE",
//"WHILE", "DO", "OD",
//"AND", "OR",
//"READ", "WRITE",
//"FOR", "FROM", "TO", "BY",
//"FUNCTION", "PROCEDURE", "RETURN", "NOT", "BEGIN", "END",
//
//"LPAREN", "RPAREN", "LBRACKET", "RBRACKET",
//"COLON", "DOT", "SEMICOLON", "COMMA", "COLON_EQ",
//"PLUS", "MINUS", "STAR", "SLASH",
//"EQ", "NEQ", "LT", "LE", "GT", "GE", "EOF",
//"BAR", "AND", "EXCLAMATIONMARK", "LCURLYBRACKET", "RCURLYBRACKET", "IFEQ"
//};
//LEXEME_TYPE lx_number[62] = {
//	/* Literals */
//LX_IDENTIFIER, LX_INTEGER, LX_STRING, LX_FLOAT,
///* Keywords */
//KW_PROGRAM,
//KW_VAR, KW_CONSTANT, KW_INTEGER, KW_BOOLEAN, KW_STRING, KW_FLOAT, KW_CHAR, KW_DOUBLE,
//KW_TRUE, KW_FALSE, KW_IF, KW_FI, KW_THEN, KW_ELSE,
//KW_WHILE, KW_DO, KW_OD,
//KW_AND, KW_OR,
//KW_READ, KW_WRITE,
//KW_FOR, KW_FROM, KW_TO, KW_BY,
//KW_FUNCTION, KW_PROCEDURE, KW_RETURN, KW_NOT, KW_BEGIN, KW_END,
///* Operators */
//LX_LPAREN, LX_RPAREN, LX_LBRACKET, LX_RBRACKET,
//LX_COLON, LX_DOT, LX_SEMICOLON, LX_COMMA, LX_COLON_EQ,
//LX_PLUS, LX_MINUS, LX_STAR, LX_SLASH,
//LX_EQ, LX_NEQ, LX_LT, LX_LE, LX_GT, LX_GE, LX_EOF,
//LX_BAR, LX_AND, LX_EXCLAMATIONMARK, LX_LCURLYBRACKET, LX_RCURLYBRACKET, LX_IFEQ
//};
//const char * type_name(LEXEME_TYPE lx) {
//	return word[lx];
//}